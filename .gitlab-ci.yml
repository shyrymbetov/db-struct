stages:
  - docker_build
  - deploy
  - notify

docker_build:
  stage: docker_build
  variables:
    GIT_CLEAN_FLAGS: none
  script:
    - docker build -t 10.0.84.11:31083/db-struct:$CI_COMMIT_SHA .
    - docker push 10.0.84.11:31083/db-struct:$CI_COMMIT_SHA
  only:
    - test
  tags:
    - test

deploy:
  stage: deploy
  script:
    - kubectl set image deployment/db-struct -n qazsu db-struct=10.0.84.11:31083/db-struct:$CI_COMMIT_SHA --record
    - curl --insecure  -s --header 'Content-Type:application/json' --request 'POST' --data "{\"chat_id\":\"$TELEGRAM_CHAT_ID\",\"text\":\"Project:$CI_PROJECT_NAME\nURL:$CI_PROJECT_URL/pipelines/$CI_PIPELINE_ID/\nBranch:$CI_COMMIT_REF_SLUG\nUser:$GITLAB_USER_NAME\nDeploy success message ✅\"}" "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage"
  only:
    - test
  tags:
    - test

notify_error:
  stage: notify
  script:
    - curl --insecure  -s --header 'Content-Type:application/json' --request 'POST' --data "{\"chat_id\":\"$TELEGRAM_CHAT_ID\",\"text\":\"Project:$CI_PROJECT_NAME\nURL:$CI_PROJECT_URL/pipelines/$CI_PIPELINE_ID/\nBranch:$CI_COMMIT_REF_SLUG\nUser:$GITLAB_USER_NAME\nDeploy fail message ❌\"}" "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage"
  when: on_failure
  only:
    - test
  tags:
    - test


